name: CI Deployment

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # Checkout your repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Extract Incident Number (looks for INC followed by digits in commit message for the flow)
      - name: Extract Incident Number
        id: extract_incident
        run: |
          COMMIT_MSG="${{ github.event.head_commit.message }}"
          echo "Commit message: $COMMIT_MSG"
          INCIDENT=$(echo "$COMMIT_MSG" | grep -oE 'INC[0-9]+')
          if [ -z "$INCIDENT" ]; then
            INCIDENT="UNKNOWN"
          fi
          echo "incident_number=$INCIDENT" >> $GITHUB_OUTPUT

      # Example: Run your build/tests
      - name: Run tests
        run: |
          echo "Running tests........"
          # put your test/build commands here
          echo "Tests complete."

      # Always call ServiceNow with FAILURE if something breaks
      - name: Send Deployment Event (Failure)
        if: failure()
        run: |
          curl -X POST \
            -H "Content-Type: application/json" \
            -u "github_integration:${{ secrets.SERVICENOW_TOKEN }}" \
            -d "{\"deployment_id\":\"${{ steps.extract_incident.outputs.incident_number }}\",\"status\":\"failure\",\"repo\":\"${{ github.repository }}\",\"commit\":\"${{ github.sha }}\"}" \
            "https://dev284803.service-now.com/api/622834/github_ci_webhook/webhook"

      # Call ServiceNow with SUCCESS if job passed
      - name: Send Deployment Event (Success)
        if: success()
        run: |
          curl -X POST \
            -H "Content-Type: application/json" \
            -u "github_integration:${{ secrets.SERVICENOW_TOKEN }}" \
            -d "{\"deployment_id\":\"${{ steps.extract_incident.outputs.incident_number }}\",\"status\":\"success\",\"repo\":\"${{ github.repository }}\",\"commit\":\"${{ github.sha }}\"}" \
            "https://dev284803.service-now.com/api/622834/github_ci_webhook/webhook"
